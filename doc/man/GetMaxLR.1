.\" Automatically generated by Pod::Man v1.37, Pod::Parser v1.13
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sh \" Subsection heading
.br
.if t .Sp
.ne 5
.PP
\fB\\$1\fR
.PP
..
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  | will give a
.\" real vertical bar.  \*(C+ will give a nicer C++.  Capital omega is used to
.\" do unbreakable dashes and therefore won't be available.  \*(C` and \*(C'
.\" expand to `' in nroff, nothing in troff, for use with C<>.
.tr \(*W-|\(bv\*(Tr
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
'br\}
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.Sh), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.if \nF \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    nr % 0
.    rr F
.\}
.\"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.hy 0
.if n .na
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "GETMAXLR 1"
.TH GETMAXLR 1 "2005-01-13" "perl v5.8.1" "QTL Cartographer 1.17 Perl Script"
.SH "NAME"
GetMaxLR.pl \- The the maximum likelihood ratio from a Zmapqtl output file
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 1
\&   GetMaxLR.pl [-C column] [-i] [-h] [-j] [-r rep] [-t trait] < input > output
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
\&\fBGetMaxLR.pl\fR reads from the standard input and writes to the standard output.
It can do one of two things.   The first is to initialize a file of likelihood ratio
maxima so that the file would have the same output as a \fIZipermE.out\fR file.
The second is to read the results of a run of \fBZmapqtl\fR and pull out the
largest value in the user-specified column.  It is a \fBPerl\fR script meant
to be run in a loop with \fBPrune\fR and \fBZmapqtl\fR or \fBJZmapqtl\fR.  
.SH "OPTIONS"
.IX Header "OPTIONS"
.IP "\fB\-C\fR" 4
.IX Item "-C"
This option requires an integer value.  It allows the user to specify the \fIZmapqtl.out\fR
file column for processing.   
.IP "\fB\-i\fR" 4
.IX Item "-i"
requires no operand.  If used, the script outputs a \fIZipermE.out\fR header to the
standard output and exits.  It does require an input file of the \fIZmapqtl.out\fR format.  
\&\fBGetMaxLR\fR will get the model, cross, window size and number of background parameters
from the \fIZmapqtl.out\fR file.
.IP "\fB\-h\fR" 4
.IX Item "-h"
requires no operand.  If used, it prints a usage message and exits.
.IP "\fB\-j\fR" 4
.IX Item "-j"
requires no operand.  It is a flag to indicate that the input file is
a joint-mapping file from \fBJZmapqtl\fR.
.IP "\fB\-r\fR" 4
.IX Item "-r"
requires the repetition number for the bootstrap or permutation test.
.IP "\fB\-t\fR" 4
.IX Item "-t"
used with an integer is simply a way to pass on the trait value when using
\&\fBJZmapqtl\fR.  It should only be used in conjuntion with the \fB\-j\fR and \fB\-i\fR 
options.   
.SH "EXAMPLE"
.IX Header "EXAMPLE"
This \fBPerl\fR program was meant to be run in a shell script.  Here is an 
example of a \fBc\fR shell program that allows the user to calculate the experimentwise
threshold as well as comparisonwise values.
.PP
.Vb 49
\&        #!/bin/csh
\&        #           Permute 
\&        #   Copyright (C) 2000 Christopher J. Basten 
\&        # Usage governed by the terms of the GNU  General Public License,  version 2 or higher
\&        #  See the file COPYING in this directory
\&        #
\&        #   This file was meant as an example.  You  will need to edit it 
\&        #   to work on your particular system with your data files.
\&        #
\&        #  Start by setting the variables needed.  
\&        # 
\&        set stem=corn                           #  filename stem
\&        set column=4                            #  LR column to process
\&        set model=3                             #  analysis model
\&        set reps=1000                           #  number of bootstraps
\&        set email=basten\e@statgen.ncsu.edu      #  email address for notice
\&        set templog=temp.log                    #  temporary log file
\&        set qbin=/user/local/bin                #  where are the QTL Cart binaries
\&        set bin=/usr/bin                        #  where are the system programs
\&        #
\&        #   Should only need to change what is above.
\&        #
\&        $bin/rm -f $templog
\&        echo "Permutation test started " > $templog
\&        $bin/date >>  $templog
\&        $bin/echo "Stem: " $stem >> $templog
\&        $bin/echo "Model: " $model >> $templog
\&        $bin/echo "Reps: " $reps >> $templog
\&        $bin/echo "Email: " $email >> $templog
\&        $bin/mv $stem.log $stem.logsave
\&        $bin/mv $stem.z $stem.zsave
\&        $bin/rm -f $stem.z{$model}e
\&        set i=1
\&        $qbin/GetMaxLR -i < $stem.zsave > $stem.z{$model}.ewt
\&        $qbin/CWTupdate -C $column < $stem.zsave > $stem.z{$model}.cwt
\&        while ( $i <= $reps )
\&        $qbin/Prune -A -V -i $stem.cro -b 2  >>&  $templog
\&        $bin/nice $qbin/Zmapqtl -A -V -M $model -i $stem.crb  >>&  $templog
\&        $qbin/GetMaxLR -r $i -C $column < $stem.z  >> $stem.z{$model}.ewt
\&        $qbin/CWTupdate -f $stem.z{$model}.cwt -C $column < $stem.z  > $stem.z{$model}.newcwt
\&        $bin/mv $stem.z{$model}.newcwt $stem.z{$model}.cwt 
\&        $bin/rm -f $stem.z
\&        @ i++
\&        end
\&        $bin/echo "Now your can run EWThreshold on $stem.z$model.ewt" >> $templog
\&        $bin/mv $stem.zsave $stem.z
\&        $bin/mv $stem.logsave $stem.log
\&        $bin/date >>  $templog
\&        /usr/ucb/mail $email <  $templog
.Ve
.PP
Suppose you had a data set \fIcorn.cro\fR and a map file \fIcorn.map\fR.  To use the above
shell script, create a directory called \fIcornperm\fR and copy the two files into it.
Run \fBQstats\fR on the files to initialize the \fIqtlcart.rc\fR file, and \fBSRmapqtl\fR to
rank a set of markers for use with composite interval mapping.  Make sure that the
\&\fB\s-1QTL\s0 Cartographer\fR programs and scripts are installed in the \fI/usr/local/bin\fR subdirectory
(or change the line setting \fIqbin\fR above).   The script above is set to do 
1,000 permutations using interval mapping and restricting itself to column
four of the \fIZmapqtl.out\fR file.   Run it as follows:
.PP
.Vb 1
\&        % Permute   &
.Ve
.PP
The script will email you a message when it is complete. 
.PP
Note that the above example uses \fB\-C 4\fR for the \fBGetMaxLR\fR line in the loop.
If you want to use a different column of likelihood ratios, you can change 
that option.  You could create multiple files of the format \fIZipermE.out\fR
and collect the maximal likelihood ratio from different hypothesis tests by
having multiple instances of \fBGetMaxLR\fR in the loop.    
.PP
Once finished, you will have two files of interest.  The first will be \fIcorn.z3.e\fR
and will contain the maxima of the likelihoods for each of the permuted data sets.
Run \fBEWThreshold\fR on this file to get your experimentwise thresholds.  The other
file, \fIcorn.z3.cwt\fR, will contain the comparisonwise thresholds.
.PP
The \fBPermute\fR script above has been rewritten as a \fBPerl\fR script and is
described in a man page \fB\f(BIPermute.pl\fB\|(1)\fR.  
.SH "SEE ALSO"
.IX Header "SEE ALSO"
\&\fB\f(BIZmapqtl\fB\|(1)\fR, \fB\f(BIPrune\fB\|(1)\fR, \fB\f(BIEWThreshold.pl\fB\|(1)\fR, \fB\f(BICWTupdate.pl\fB\|(1)\fR
.SH "AUTHORS"
.IX Header "AUTHORS"
In general, it is best to contact us via email (basten@statgen.ncsu.edu).
.PP
.Vb 4
\&        Christopher J. Basten, B. S. Weir and Z.-B. Zeng
\&        Department of Statistics, North Carolina State University
\&        Raleigh, NC 27695-7566, USA
\&        Phone: (919)515-1934
.Ve
